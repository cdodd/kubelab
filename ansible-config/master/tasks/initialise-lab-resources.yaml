- name: Create namespaces
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ item }}"
  loop:
    - prod
    - dev

- name: Create secret "db_pass"
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: db-pass
        namespace: prod
      data:
        DB_PASSWORD: SUREUUQ=

- name: Create pod "web"
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Pod
      metadata:
        name: web
        namespace: prod
        labels:
          app: web
      spec:
        containers:
          - name: nginx
            image: nginx
            env:
              - name: DB_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: db-pass
                    key: DB_PASSWORD

- name: Create service for "web"
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        labels:
          app: web
        name: web
        namespace: prod
      spec:
        ports:
        - port: 80
          protocol: TCP
          targetPort: 80
        selector:
          app: web
        type: ClusterIP
      status:

- name: Create pod "app1"
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Pod
      metadata:
        name: app1
        namespace: dev
        labels:
          app: app1
      spec:
        containers:
          - name: client
            image: curlimages/curl
            command: ["/bin/sh", "-c"]
            args:
            - |
              while true; do
                date;
                echo "";
                curl -X GET -I --connect-timeout 5 http://web.prod 2>/dev/null;
                echo "============================================";
                sleep 5;
              done

- name: Create kube-bench report jobs
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: batch/v1
      kind: Job
      metadata:
        name: "kube-bench-{{ item }}"
        namespace: default
      spec:
        template:
          metadata:
            labels:
              app: "kube-bench-{{ item }}"
          spec:
            nodeName: "{{ item }}"
            containers:
              - command: ["kube-bench"]
                image: docker.io/aquasec/kube-bench:v0.9.1
                name: kube-bench
                volumeMounts:
                  - name: var-lib-cni
                    mountPath: /var/lib/cni
                    readOnly: true
                  - mountPath: /var/lib/etcd
                    name: var-lib-etcd
                    readOnly: true
                  - mountPath: /var/lib/kubelet
                    name: var-lib-kubelet
                    readOnly: true
                  - mountPath: /var/lib/kube-scheduler
                    name: var-lib-kube-scheduler
                    readOnly: true
                  - mountPath: /var/lib/kube-controller-manager
                    name: var-lib-kube-controller-manager
                    readOnly: true
                  - mountPath: /etc/systemd
                    name: etc-systemd
                    readOnly: true
                  - mountPath: /lib/systemd/
                    name: lib-systemd
                    readOnly: true
                  - mountPath: /srv/kubernetes/
                    name: srv-kubernetes
                    readOnly: true
                  - mountPath: /etc/kubernetes
                    name: etc-kubernetes
                    readOnly: true
                  - mountPath: /usr/local/mount-from-host/bin
                    name: usr-bin
                    readOnly: true
                  - mountPath: /etc/cni/net.d/
                    name: etc-cni-netd
                    readOnly: true
                  - mountPath: /opt/cni/bin/
                    name: opt-cni-bin
                    readOnly: true
            hostPID: true
            restartPolicy: Never
            volumes:
              - name: var-lib-cni
                hostPath:
                  path: /var/lib/cni
              - hostPath:
                  path: /var/lib/etcd
                name: var-lib-etcd
              - hostPath:
                  path: /var/lib/kubelet
                name: var-lib-kubelet
              - hostPath:
                  path: /var/lib/kube-scheduler
                name: var-lib-kube-scheduler
              - hostPath:
                  path: /var/lib/kube-controller-manager
                name: var-lib-kube-controller-manager
              - hostPath:
                  path: /etc/systemd
                name: etc-systemd
              - hostPath:
                  path: /lib/systemd
                name: lib-systemd
              - hostPath:
                  path: /srv/kubernetes
                name: srv-kubernetes
              - hostPath:
                  path: /etc/kubernetes
                name: etc-kubernetes
              - hostPath:
                  path: /usr/bin
                name: usr-bin
              - hostPath:
                  path: /etc/cni/net.d/
                name: etc-cni-netd
              - hostPath:
                  path: /opt/cni/bin/
                name: opt-cni-bin
  loop:
    - master
    - node1
